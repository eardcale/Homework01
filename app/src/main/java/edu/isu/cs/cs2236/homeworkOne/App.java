/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.isu.cs.cs2236.homeworkOne;

import javafx.application.Application;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;
import javafx.collections.*;

import java.util.ArrayList;
import java.util.Vector;

public class App extends Application {
    public void start(Stage stage) throws Exception{
        stage.setTitle("Course View");
        //list of departments
        ObservableList<String> departmentList = FXCollections.observableArrayList("Botany","Chemistry","Computer Science","Mathematics","Physics","Zoology");
        //combo box
        ComboBox departments = new ComboBox(departmentList);
        departments.getSelectionModel().selectFirst();

        //data entry
        TextField courseNum = new TextField();
        TextField courseName = new TextField();
        TextField courseCredits = new TextField();
        courseNum.setPromptText("num");
        courseName.setPromptText("name");
        courseCredits.setPromptText("credits");
        Button enter = new Button("Enter");
            //box with text and entry button
        HBox dataEntry = new HBox(courseNum,courseName,courseCredits,enter);

        //Data selection
        Button showAll = new Button("View All");
        Button viewDepartment = new Button("View -> ");
        ComboBox departmentSelect = new ComboBox(departmentList);
        departmentSelect.getSelectionModel().selectFirst();
            //box containing data selection tools
        HBox dataSelection = new HBox(showAll,viewDepartment,departmentSelect);

        //Course Display
        Vector<Course> courses = new Vector<>();
        ListView courseList = new ListView();


        VBox main = new VBox(departments,dataEntry,dataSelection,courseList);
        Scene scene = new Scene(main, 600, 300);
        stage.setScene(scene);
        stage.show();

        //Entry Button code
        enter.setOnAction(value ->{
            //makes sure all fields are filled in
            if(courseNum.getText().isBlank() || courseName.getText().isBlank() || courseCredits.getText().isBlank()){
                Alert alert = new Alert(Alert.AlertType.ERROR,"One or more fileds is empty");
                alert.showAndWait();
                return;
            }

            String tempNumStr = courseNum.getText();
            int tempNum = Integer.parseInt(tempNumStr);
            String tempTitle = courseName.getText();
            String tempCredStr = courseNum.getText();
            int tempCred = Integer.parseInt(tempCredStr);
            int tempSub= departmentList.indexOf(departments.getValue());
            courses.add(new Course(tempNum,tempSub,tempTitle,tempCred));
            courseName.setText("");
            courseCredits.setText("");
            courseNum.setText("");

        });
        //view all button code
        showAll.setOnAction(value->{
            courseList.getItems().clear();
            courseList.getItems().addAll(courses);
        });
        //view department button code
        viewDepartment.setOnAction(value->{
            int index = departmentList.indexOf(departmentSelect.getValue());
            courseList.getItems().clear();
            for(Course course : courses) {
                if (index == course.getIndex()) {
                    courseList.getItems().add(course);
                }
            }
        });
    }
    public static void main(String[] args) {
        Application.launch(args);
    }
}

